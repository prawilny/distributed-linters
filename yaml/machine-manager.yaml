apiVersion: v1
kind: Service
metadata:
  name: machine-manager-service
  labels:
    app: machine-manager
spec:
  type: LoadBalancer
  ports:
  - name: admin
    port: 10000
    targetPort: 10000
    protocol: TCP
  selector:
    app: machine-manager
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: machine-user
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: machine-manager
  labels:
    app: machine-manager
spec:
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
  replicas: 1
  selector:
    matchLabels:
      app: machine-manager
  template:
    metadata:
      labels:
        app: machine-manager
    spec:
      containers:
      - name: machine-manager
        image: localhost/machine_manager_container
        imagePullPolicy: Never
        ports:
        - containerPort: 10000
          name: admin
        - containerPort: 60000
          name: health
        args: ["-admin-addr=:10000", "-health-addr=:60000"]
        livenessProbe:
          httpGet:
            path: "/health"
            port: 60000
      serviceAccountName: machine-user
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: admin-pods
  namespace: default
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["create"]
- apiGroups: [""]
  resources: ["configmaps"]
  resourceNames: ["machine-manager-config-map"]
  verbs: ["list", "get", "watch", "create", "update", "delete"]
- apiGroups: ["apps"]
  resources: ["deployments"]
  verbs: ["create", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    rbac.authorization.kubernetes.io/autoupdate: "true"
  creationTimestamp: null
  labels:
    kubernetes.io/bootstrapping: rbac-defaults
  name: admin-pods
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: admin-pods
subjects:
- kind: ServiceAccount
  name: machine-user
  namespace: default
